{"version":3,"sources":["components/UserInfo/UserInfo.jsx","components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["UserInfo","user","email","name","className","href","CommentInfo","comment","id","body","CommentList","comments","map","PostInfo","post","title","length","PostList","posts","postsFromServer","userId","usersFromServer","find","postId","commentsFromServer","filter","App","ReactDOM","render","document","getElementById"],"mappings":"m08IAEaA,EAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACjBC,EAAgBD,EAAhBC,MAAOC,EAASF,EAATE,KAKf,OACE,mBAAGC,UAAU,WAAWC,KAAI,iBAAYH,GAAxC,SACGC,KCVMG,G,MAAc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpBC,EAA0BD,EAA1BC,GAAIN,EAAsBK,EAAtBL,MAAOO,EAAeF,EAAfE,KAAMN,EAASI,EAATJ,KAEzB,OACE,sBAAKC,UAAU,cAAf,UAEE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SAAuCD,IACtC,OACD,mBACEC,UAAU,qBACVC,KAAI,iBAAYH,GAFlB,SAIGA,OAIL,mBAAGE,UAAU,oBAAb,SAAkCK,MAbFD,KCDzBE,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACzB,qBAAKP,UAAU,cAAf,SACGO,EAASC,KAAI,SAAAL,GAAO,OACnB,cAAC,EAAD,CAAaA,QAASA,GAAcA,EAAQC,UCFrCK,EAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACjBC,EAAgCD,EAAhCC,MAAOd,EAAyBa,EAAzBb,KAAMQ,EAAmBK,EAAnBL,KAAME,EAAaG,EAAbH,SAE3B,OACE,sBAAKP,UAAU,WAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SAAiCW,IAEjC,8BACG,eAEAD,EAAKb,MAAQ,cAAC,EAAD,CAAUA,KAAMA,UAIlC,mBAAGG,UAAU,iBAAb,SAA+BK,IAE/B,uBACCE,EAASK,OAAS,EAEf,cAAC,EAAD,CAAaL,SAAUA,IAEvB,mBAAG,UAAQ,oBAAX,iCCxBGM,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,qBAAKd,UAAU,WAAf,SACGc,EAAMN,KAAI,SAAAE,GAAI,OAAK,cAAC,EAAD,CAAUA,KAAMA,GAAWA,EAAKN,U,qBCWjD,IAAMU,EAAQC,EAAgBP,KAAI,SAAAE,GAAI,kCACxCA,GADwC,IAE3Cb,MAVemB,EAUDN,EAAKM,OATZC,EAAgBC,MAAK,SAAArB,GAAI,OAAIA,EAAKO,KAAOY,GAAU,SAU1DT,UAP0BY,EAOGT,EAAKN,GAN3BgB,EAAmBC,QAAO,SAAAlB,GAAO,OAAIA,EAAQgB,SAAWA,QADjE,IAA4BA,EAJXH,KAcJM,EAAM,kBACjB,0BAAStB,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCAEA,cAAC,EAAD,CAAUc,MAAOA,QCrBrBS,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.9a2718ff.chunk.js","sourcesContent":["import './UserInfo.scss';\n\nexport const UserInfo = ({ user }) => {\n  const { email, name } = user;\n  // if (!user) {\n  //   return null;\n  // }\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","export const CommentInfo = ({ comment }) => {\n  const { id, email, body, name } = comment;\n\n  return (\n    <div className=\"CommentInfo\" key={id}>\n\n      <div className=\"CommentInfo__title\">\n        <strong className=\"CommentInfo__name\">{name}</strong>\n        {' by '}\n        <a\n          className=\"CommentInfo__email\"\n          href={`mailto:${email}`}\n        >\n          {email}\n        </a>\n      </div>\n\n      <p className=\"CommentInfo__body\">{body}</p>\n    </div>\n  );\n};\n","import './CommentList.scss';\nimport { CommentInfo } from '../CommentInfo/CommentInfo';\n\nexport const CommentList = ({ comments }) => (\n  <div className=\"CommentList\">\n    {comments.map(comment => (\n      <CommentInfo comment={comment} key={comment.id} />\n    ))}\n  </div>\n);\n","import './PostInfo.scss';\nimport { UserInfo } from '../UserInfo/UserInfo';\nimport { CommentList } from '../CommentList/CommentList';\n\nexport const PostInfo = ({ post }) => {\n  const { title, user, body, comments } = post;\n\n  return (\n    <div className=\"PostInfo\">\n      <div className=\"PostInfo__header\">\n        <h3 className=\"PostInfo__title\">{title}</h3>\n\n        <p>\n          {' Posted by  '}\n\n          {post.user && <UserInfo user={user} />}\n        </p>\n      </div>\n\n      <p className=\"PostInfo__body\">{body}</p>\n\n      <hr />\n      {comments.length > 0\n        ? (\n          <CommentList comments={comments} />\n        ) : (\n          <b data-cy=\"NoCommentsMessage\">No comments yet</b>\n        )\n      }\n    </div>\n  );\n};\n","import { PostInfo } from '../PostInfo/PostInfo';\n\nexport const PostList = ({ posts }) => (\n  <div className=\"PostList\">\n    {posts.map(post => (<PostInfo post={post} key={post.id} />))}\n  </div>\n);\n","import './App.scss';\nimport { PostList } from './components/PostList';\n\nimport postsFromServer from './api/posts.json';\nimport commentsFromServer from './api/comments.json';\nimport usersFromServer from './api/users.json';\n\nfunction getUser(userId) {\n  return usersFromServer.find(user => user.id === userId || null);\n}\n\nfunction getCommentByPostId(postId) {\n  return commentsFromServer.filter(comment => comment.postId === postId);\n}\n\nexport const posts = postsFromServer.map(post => ({\n  ...post,\n  user: getUser(post.userId),\n  comments: getCommentByPostId(post.id),\n}));\n\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">Static list of posts</h1>\n\n    <PostList posts={posts} />\n  </section>\n);\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}