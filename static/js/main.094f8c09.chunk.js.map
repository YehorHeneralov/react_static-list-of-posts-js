{"version":3,"sources":["components/UserInfo/UserInfo.jsx","components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["UserInfo","user","className","href","email","name","CommentInfo","comment","body","id","CommentList","comments","length","map","PostInfo","post","title","PostList","posts","postsFromServer","userId","usersFromServer","find","postId","commentsFromServer","filter","App","ReactDOM","render","document","getElementById"],"mappings":"m08IAEaA,EAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACzB,OAAKA,EAKH,mBAAGC,UAAU,WAAWC,KAAI,iBAAYF,EAAKG,OAA7C,SACGH,EAAKI,OALD,MCJEC,G,MAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACzB,qBAAIL,UAAU,cAAd,UAEE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SAAuCK,EAAQF,OAC9C,OACD,mBACEH,UAAU,qBACVC,KAAI,iBAAYI,EAAQH,OAF1B,SAIGG,EAAQH,WAIb,mBAAGF,UAAU,oBAAb,SAAkCK,EAAQC,SAbXD,EAAQE,MCE9BC,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACzBA,EAASC,OAAS,EAChB,oBAAIV,UAAU,cAAd,SACGS,EAASE,KAAI,SAAAN,GAAO,OACnB,cAAC,EAAD,CAAaA,QAASA,GAAcA,EAAQE,SAIhD,mBAAG,UAAQ,oBAAX,8BCPSK,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACtB,qBAAIb,UAAU,WAAd,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SAAiCa,EAAKC,QAEtC,8BACG,eAEAD,EAAKd,MAAQ,cAAC,EAAD,CAAUA,KAAMc,EAAKd,aAIvC,mBAAGC,UAAU,iBAAb,SAA+Ba,EAAKP,OAEpC,uBAEA,cAAC,EAAD,CAAaG,SAAUI,EAAKJ,eClBnBM,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,qBAAKhB,UAAU,WAAf,SACGgB,EAAML,KAAI,SAAAE,GAAI,OAAK,cAAC,EAAD,CAAUA,KAAMA,GAAWA,EAAKN,U,qBCWjD,IAAMS,EAAQC,EAAgBN,KAAI,SAAAE,GAAI,kCACxCA,GADwC,IAE3Cd,MAVemB,EAUDL,EAAKK,OATZC,EAAgBC,MAAK,SAAArB,GAAI,OAAIA,EAAKQ,KAAOW,GAAU,SAU1DT,UAP0BY,EAOGR,EAAKN,GAN3Be,EAAmBC,QAAO,SAAAlB,GAAO,OAAIA,EAAQgB,SAAWA,QADjE,IAA4BA,EAJXH,KAcJM,EAAM,kBACjB,0BAASxB,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCAEA,cAAC,EAAD,CAAUgB,MAAOA,QCrBrBS,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.094f8c09.chunk.js","sourcesContent":["import './UserInfo.scss';\n\nexport const UserInfo = ({ user }) => {\n  if (!user) {\n    return null;\n  }\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n      {user.name}\n    </a>\n  );\n};\n","export const CommentInfo = ({ comment }) => (\n  <li className=\"CommentInfo\" key={comment.id}>\n\n    <div className=\"CommentInfo__title\">\n      <strong className=\"CommentInfo__name\">{comment.name}</strong>\n      {' by '}\n      <a\n        className=\"CommentInfo__email\"\n        href={`mailto:${comment.email}`}\n      >\n        {comment.email}\n      </a>\n    </div>\n\n    <p className=\"CommentInfo__body\">{comment.body}</p>\n  </li>\n);\n","import './CommentList.scss';\nimport { CommentInfo } from '../CommentInfo/CommentInfo';\n\nexport const CommentList = ({ comments }) => (\n  comments.length > 0 ? (\n    <ul className=\"CommentList\">\n      {comments.map(comment => (\n        <CommentInfo comment={comment} key={comment.id} />\n      ))}\n    </ul>\n  ) : (\n    <b data-cy=\"NoCommentsMessage\">No comments yet</b>\n  )\n);\n","import './PostInfo.scss';\nimport { UserInfo } from '../UserInfo/UserInfo';\nimport { CommentList } from '../CommentList/CommentList';\n\nexport const PostInfo = ({ post }) => (\n  <li className=\"PostInfo\">\n    <div className=\"PostInfo__header\">\n      <h3 className=\"PostInfo__title\">{post.title}</h3>\n\n      <p>\n        {' Posted by  '}\n\n        {post.user && <UserInfo user={post.user} />}\n      </p>\n    </div>\n\n    <p className=\"PostInfo__body\">{post.body}</p>\n\n    <hr />\n\n    <CommentList comments={post.comments} />\n  </li>\n);\n","import { PostInfo } from '../PostInfo/PostInfo';\n\nexport const PostList = ({ posts }) => (\n  <div className=\"PostList\">\n    {posts.map(post => (<PostInfo post={post} key={post.id} />))}\n  </div>\n);\n","import './App.scss';\nimport { PostList } from './components/PostList';\n\nimport postsFromServer from './api/posts.json';\nimport commentsFromServer from './api/comments.json';\nimport usersFromServer from './api/users.json';\n\nfunction getUser(userId) {\n  return usersFromServer.find(user => user.id === userId || null);\n}\n\nfunction getCommentByPostId(postId) {\n  return commentsFromServer.filter(comment => comment.postId === postId);\n}\n\nexport const posts = postsFromServer.map(post => ({\n  ...post,\n  user: getUser(post.userId),\n  comments: getCommentByPostId(post.id),\n}));\n\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">Static list of posts</h1>\n\n    <PostList posts={posts} />\n  </section>\n);\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}